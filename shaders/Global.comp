#extension GL_EXT_debug_printf : enable // for debugPrintfEXT()
#extension GL_EXT_scalar_block_layout : enable // for std430
#extension GL_EXT_shader_8bit_storage : enable
#extension GL_EXT_shader_16bit_storage : enable
#extension GL_EXT_shader_explicit_arithmetic_types_int8 : enable
// #extension GL_EXT_shader_explicit_arithmetic_types_int16 : enable // doesn't work on some Adreno GPUs
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#extension GL_EXT_shader_atomic_float : enable

#define FloatT float
#define Vec2T vec2
#define Vec3T vec3
#define Vec4T vec4
#define fixed_to_float fixed32_to_float32
#define float_to_fixed float32_to_fixed32

#define USE_FLOAT16_RESOURCE 1
#if (USE_FLOAT16_RESOURCE == 1)
    #define FloatX float16_t
    #define Vec2X f16vec2
    #define Vec3X f16vec3
    #define Vec4X f16vec4
    #define imageFormatX r16f
    #define fixed_to_floatX fixed32_to_float16
    #define floatX_to_fixed float16_to_fixed32
#else
    #define FloatX float
    #define Vec2X vec2
    #define Vec3X vec3
    #define Vec4X vec4
    #define imageFormatX r32f
    #define fixed_to_floatX fixed32_to_float32
    #define floatX_to_fixed float32_to_fixed32
#endif

#define IntT int
#define Ivec2T ivec2
#define Ivec3T ivec3
#define Ivec4T ivec4

#define IntX int16_t
#define Ivec2X i16vec2
#define Ivec3X i16vec2
#define Ivec4X i16vec2

#define UintX uint16_t
#define Uvec2X u16vec2
#define Uvec3X u16vec2
#define Uvec4X u16vec2

#define PI 3.141592653589793
layout(constant_id = 0) const int SCREEN_WIDTH = 1;
layout(constant_id = 1) const int SCREEN_HEIGT = 1;
const Ivec2T SCREEN_DIM = Ivec2T(SCREEN_WIDTH, SCREEN_HEIGT);


layout(std430, binding = 0) uniform UniformBufferObject {
    mat4 model;
    mat4 view;
    mat4 proj;
    
    vec3 camPos;
    float elapsedTime;

    vec3 camDir;
    float padding_0;

    vec3 dirLightDir;
    float padding_1;
} ubo;